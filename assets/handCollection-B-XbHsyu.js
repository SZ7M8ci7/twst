import{I as v,bi as H,r as S,e as l}from"./index-BYs4ikEQ.js";const c="twst-hand-collection";function w(t){return{characterName:"",cardName:t,isOwned:!1,level:0,isLimitBreak:!1,isM3:!1}}function k(){try{const t=localStorage.getItem(c);return t?JSON.parse(t):{}}catch(t){return console.warn("Failed to load hand collection from localStorage:",t),{}}}function p(t){try{localStorage.setItem(c,JSON.stringify(t))}catch(n){console.warn("Failed to save hand collection to localStorage:",n)}}const L=v("handCollection",()=>{const t=H(k()),n=S(!1);let i=0;function r(e){return t[e]||(t[e]=w(e)),t[e]}function d(e,o){const s=r(e);Object.assign(s,o),"isLimitBreak"in o&&o.isLimitBreak&&(s.isM3=!0)}function u(e){return r(e).isOwned}const a=l(()=>Object.values(t).filter(e=>e.isOwned));function C(e){n.value=e}function f(){i++}function h(){return i===0}function O(){p(t)}const g=l(()=>a.value.length>0),m=l(()=>({totalCards:Object.keys(t).length,ownedCardsCount:a.value.length,limitBreakCardsCount:a.value.filter(e=>e.isLimitBreak).length,m3CardsCount:a.value.filter(e=>e.isM3).length}));return{handCollection:t,useHandCollection:n,ownedCards:a,hasAnyHandSettings:g,stats:m,getHandCard:r,updateHandCard:d,isCharacterOwned:u,setUseHandCollection:C,saveHandCollectionManually:O,incrementModalOpenCount:f,isFirstModalOpen:h}});export{L as useHandCollectionStore};
